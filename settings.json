{"Which Mutation method to use": "cutoff", "Which breeding method to use": "cutoff", "Which method of selecting ants to be bred to use": "winnerSecond", "Which method of generating the next Generation to use": "familyLine", "The minimum amount of movements a chunk can have": 5, "What amount of the end of the dna to disallow chunking": 1.1, "The percent chance for each movement to be mutated": 50, "I don't remember what this does": 10, "The minimum amount of cuts multicut cuts": 3, "The maximum amount of cuts multicut cuts": 20, "Minimum Foods Spawned": 75, "Maximum Foods Spawned": 200, "How many ants per generation": 30, "How long each generation lasts": 300, "Breed, or only mutate": false, "Whether a new generation will be created after a time": true, "The home base color": [49.19140625, 240.9375, 59.23046875], "How fast the simulation runs": 1, "": true, "How much romance.winnerProb is weighted": 1, "How big of a group to select from in romance.groupWinnerSecond": 20, "How many end children to inbreed together in romance.inbreed (must be a power of 2)": 10, "Whether we should add the parents of the previous generation to the new generation": true, "I don't remember what this does \n(minCutoffBreedingLen)": 10, "The minimum amount of cuts multicut cuts \n(minBreedingMultiCuts)": 3, "The maximum amount of cuts multicut cuts \n(maxBreedingMultiCuts)": 20, "The minimum amount of movements a chunk can have \n(minMutateChunkLen)": 5, "What amount of the end of the dna to disallow chunking \n(mutateChunkDivisor)": 1.1, "The percent chance for each movement to be mutated \n(induvidualMutationChance)": 30, "Which Mutation method to use \n(mutationMethod)": "chunk", "Which breeding method to use \n(breedingMethod)": "induvidual", "Which method of selecting ants to be bred to use \n(romanceMethod)": "winnerSecond", "Which method of generating the next Generation to use \n(genGenMethod)": "familyLine", "Minimum Foods Spawned \n(minFoods)": 20, "Maximum Foods Spawned \n(maxFoods)": 100, "How many ants per generation \n(genSize)": 100, "How long each generation lasts \n(framesPerGeneration)": 300, "Breed, or only mutate \n(doBreeding)": true, "Whether a new generation will be created after a time \n(autoBreed)": true, "How much romance.winnerProb is weighted \n(romanceWinnerProbWeight)": 1, "How big of a group to select from in romance.groupWinnerSecond \n(romanceGroupWinnerSecondGroupSize)": 20, "How many end children to inbreed together in romance.inbreed (must be a power of 2) \n(romanceInbredN)": 8, "Whether we should add the parents of the previous generation to the new generation \n(includeParents)": true, "Number of Couples": 10, "Min multiCuts": 3, "Max multiCuts": 20, "Minimum chunk length": 5, "No longer used": 1.1, "Induvitual mutation chance": 30, "WinnerProb probibility weight": 1, "Group Size for GroupWinnerSecond": 20, "Inbreeding count": 8}